(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{259:function(t,a,s){"use strict";s.r(a);var n=s(27),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"commitizen-commitlint-changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitizen-commitlint-changelog"}},[t._v("#")]),t._v(" Commitizen+Commitlint+Changelog")]),t._v(" "),s("p",[t._v("如何写好Git commit？\n当然要借助工具，才能够写得即规范，又格式化，还能够支持后续分析。")]),t._v(" "),s("p",[t._v("目前比较建议的是，使用终端工具 commitizen/cz-cli + commitizen/cz-conventional-changelog  + conventional-changelog/standard-version 一步解决提交信息和版本发布。\n甚至，如果想更狠一点，在持续集成里面加入 marionebl/commitlint 检查 commit 信息是否符合规范，也不是不可以。")]),t._v(" "),s("h2",{attrs:{id:"commit-message-格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-格式"}},[t._v("#")]),t._v(" Commit Message 格式")]),t._v(" "),s("p",[t._v("目前规范使用较多的是 "),s("a",{attrs:{href:"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 团队的规范"),s("OutboundLink")],1),t._v(" , 继而衍生了 "),s("a",{attrs:{href:"https://www.conventionalcommits.org/en/v1.0.0-beta.4/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits specification"),s("OutboundLink")],1),t._v(" 。很多工具也是基于此规范, 它的 message 格式如下:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BLANK LINE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BLANK LINE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("footer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("我们通过 git commit 命令带出的 vim 界面填写的最终结果应该类似如上这个结构, 大致分为三个部分(使用空行分割):")]),t._v(" "),s("ul",[s("li",[t._v("标题行: 必填, 描述主要修改类型和内容")]),t._v(" "),s("li",[t._v("主题内容: 描述为什么修改, 做了什么样的修改, 以及开发的思路等等")]),t._v(" "),s("li",[t._v("页脚注释: 放 Breaking Changes 或 Closed Issues")])]),t._v(" "),s("p",[t._v("分别由如下部分构成:")]),t._v(" "),s("ul",[s("li",[t._v("type: commit 的类型")]),t._v(" "),s("li",[t._v("feat: 新特性")]),t._v(" "),s("li",[t._v("fix: 修改问题")]),t._v(" "),s("li",[t._v("refactor: 代码重构")]),t._v(" "),s("li",[t._v("docs: 文档修改")]),t._v(" "),s("li",[t._v("style: 代码格式修改, 注意不是 css 修改")]),t._v(" "),s("li",[t._v("test: 测试用例修改")]),t._v(" "),s("li",[t._v("chore: 其他修改, 比如构建流程, 依赖管理")]),t._v(" "),s("li",[t._v("scope: commit 影响的范围, 比如: route, component, utils, build...")]),t._v(" "),s("li",[t._v("subject: commit 的概述, 建议符合 "),s("a",{attrs:{href:"https://stackoverflow.com/questions/2290016/git-commit-messages-50-72-formatting",target:"_blank",rel:"noopener noreferrer"}},[t._v("50/72 formatting"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("body: commit 具体修改内容, 可以分为多行, 建议符合 "),s("a",{attrs:{href:"https://stackoverflow.com/questions/2290016/git-commit-messages-50-72-formatting",target:"_blank",rel:"noopener noreferrer"}},[t._v("50/72 formatting"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("footer: 一些备注, 通常是 BREAKING CHANGE 或修复的 bug 的链接")])]),t._v(" "),s("p",[t._v("这样一个符合规范的 commit message, 就好像是一份邮件。")]),t._v(" "),s("h2",{attrs:{id:"commitizen-替代你的-git-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitizen-替代你的-git-commit"}},[t._v("#")]),t._v(" Commitizen: 替代你的 git commit")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitizen/cz-cli"),s("OutboundLink")],1),t._v(", 我们需要借助它提供的 "),s("code",[t._v("git cz")]),t._v(" 命令替代我们的 "),s("code",[t._v("git commit")]),t._v(" 命令, 帮助我们生成符合规范的 commit message。\n除此之外, 我们还需要为 commitizen 指定一个 Adapter 比如: "),s("a",{attrs:{href:"https://github.com/commitizen/cz-conventional-changelog",target:"_blank",rel:"noopener noreferrer"}},[t._v("cz-conventional-changelog"),s("OutboundLink")],1),t._v(" (一个符合 Angular团队规范的 preset). 使得 commitizen 按照我们指定的规范帮助我们生成 commit message。")]),t._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -D commitizen cz-conventional-changelog\n")])])]),s("p",[t._v("package.json中配置:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"script"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-cz"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"config"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commitizen"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cz-conventional-changelog"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"commitlint-校验你的-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitlint-校验你的-message"}},[t._v("#")]),t._v(" Commitlint: 校验你的 message")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://commitlint.js.org/#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),s("OutboundLink")],1),t._v(": 可以帮助我们 lint commit messages, 如果我们提交的不符合指向的规范, 直接拒绝提交, 比较狠。")]),t._v(" "),s("p",[t._v("同样的, 它也需要一份校验的配置, 这里推荐 "),s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint#readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/config-conventional"),s("OutboundLink")],1),t._v(" (符合 Angular团队规范)。")]),t._v(" "),s("h3",{attrs:{id:"安装-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D @commitlint/config-conventional @commitlint/cli\n")])])]),s("p",[t._v("同时需要在项目目录下创建配置文件 .commitlint.config.js, 写入:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@commitlint/config-conventional'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"conventional-changelog-自动生成-changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conventional-changelog-自动生成-changelog"}},[t._v("#")]),t._v(" Conventional-changelog: 自动生成 CHANGELOG")]),t._v(" "),s("p",[t._v("通过以上工具的帮助, 我们的工程 commit message 应该是符合 Angular 团队那套规范, 这样也便于我们自动生成 CHANGELOG.md")]),t._v(" "),s("p",[t._v("package.json 配置:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"script"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"changelog"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conventional-changelog -p angular -i CHANGELOG.md -s -r 0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);
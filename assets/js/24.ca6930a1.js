(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{267:function(t,s,e){"use strict";e.r(s);var a=e(27),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"路由和菜单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由和菜单"}},[t._v("#")]),t._v(" 路由和菜单")]),t._v(" "),e("p",[t._v("路由和菜单是组织起一个后台应用的关键骨架。"),e("code",[t._v("vue-new-admin")]),t._v(" 中的路由为了方便管理，使用了中心化的方式，在 "),e("a",{attrs:{href:"https://github.com/qige2016/vue-new-admin/blob/master/src/router/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("@/router/index.js"),e("OutboundLink")],1),t._v(" 统一配置和管理。")]),t._v(" "),e("br"),t._v(" "),e("p",[t._v("在这一部分，通过结合一些配置文件、基本算法及工具函数，搭建好了路由和菜单的基本框架，主要涉及以下几个模块/功能：")]),t._v(" "),e("h2",{attrs:{id:"路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),e("p",[t._v("这里的路由分为两种，"),e("code",[t._v("constantRoutes")]),t._v(" 和 "),e("code",[t._v("asyncRoutes")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("constantRoutes：")]),t._v(" 代表那些不需要动态判断权限的路由，如登录页、404等通用页面。")]),t._v(" "),e("p",[e("strong",[t._v("asyncRoutes：")]),t._v(" 代表那些需求动态判断权限并通过 "),e("code",[t._v("addRoutes")]),t._v(" 动态添加的页面。")]),t._v(" "),e("p",[t._v("具体的会在 "),e("RouterLink",{attrs:{to:"/guide/advanced/permission.html"}},[t._v("权限管理")]),t._v(" 页面介绍。")],1),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("这里所有的路由页面都使用 "),e("code",[t._v("路由懒加载")]),t._v(" 了 ，具体介绍见"),e("RouterLink",{attrs:{to:"/guide/advanced/lazy-loading.html"}},[t._v("路由懒加载")])],1)]),t._v(" "),e("p",[t._v("其它的配置和 "),e("a",{attrs:{href:"https://router.vuejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-router"),e("OutboundLink")],1),t._v(" 官方文档一样。")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("注意事项")]),t._v(" "),e("p",[t._v("如果这里有一个需要非常注意的地方就是 "),e("code",[t._v("404")]),t._v(" 页面一定要最后加载，如果放在 constantRoutes 一同声明了 "),e("code",[t._v("404")]),t._v(" ，后面的所以页面都会被拦截到"),e("code",[t._v("404")]),t._v(" ，详细的问题见 "),e("a",{attrs:{href:"https://github.com/vuejs/vue-router/issues/1176",target:"_blank",rel:"noopener noreferrer"}},[t._v("addRoutes when you've got a wildcard route for 404s does not work"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"配置项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置项"}},[t._v("#")]),t._v(" 配置项")]),t._v(" "),e("p",[t._v("首先我们了解一些配置路由时提供了哪些配置项：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当设置 true 的时候该路由不会在菜单出现，默认false")]),t._v("\nhidden"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设定路由的名字")]),t._v("\nname"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'router-name'")]),t._v(" \nmeta"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置该路由在菜单和面包屑中展示的名字")]),t._v("\n  icon"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'svg-name'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置该路由的图标")]),t._v("\n  roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'editor'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置该路由进入的权限，支持多个权限叠加")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("br"),t._v(" "),e("h2",{attrs:{id:"菜单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#菜单"}},[t._v("#")]),t._v(" 菜单")]),t._v(" "),e("p",[t._v("菜单主要基于 element-ui 的 el-menu 改造。")]),t._v(" "),e("p",[t._v("菜单是通过读取路由并结合权限判断而动态生成的，而且还需要支持路由无限嵌套，所以这里还使用到了递归组件。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("代码地址")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/qige2016/vue-new-admin/tree/master/src/layout/components/Menu",target:"_blank",rel:"noopener noreferrer"}},[t._v("@/layout/components/Menu"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("一般菜单有两种形式即：submenu 和 直接 el-menu-item。 一个是嵌套子菜单，另一个则是直接一个菜单。当你一个路由下面的 "),e("code",[t._v("children")]),t._v(" 声明的路由大于>1 个时，自动会变成嵌套的模式；如果子路由正好等于一个就会默认将子路由作为根路由显示在菜单中，此时主路由"),e("code",[t._v("path")]),t._v("也为"),e("code",[t._v("''")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"面包屑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面包屑"}},[t._v("#")]),t._v(" 面包屑")]),t._v(" "),e("p",[t._v("面包屑主要基于 element-ui 的 el-breadcrumb 改造。\n可以自由设置过滤掉一些不想显示的路径。")])])}),[],!1,null,null,null);s.default=r.exports}}]);